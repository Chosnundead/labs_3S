import db_mymodule

db = db_mymodule.Db("ПРОДАЖИ")

# ------Создание и заполнение таблицы Товары
db.goFetch(
    """
CREATE TABLE Товары
( Наименование nvarchar(20) primary key,
Цена real,
Количество int
) ;
insert into Товары (Наименование, Цена, Количество)
values ('Стол', 78, 10),
('Шкаф книжный', 150, 21),
('Стул офисный', 12, 10),
('Стул', 9, 13),
('Диван', 400, 3),
('Шкаф', 450, 10),
('Скрепки', 5, 50),
('Бумага', 10, 30),
('Степлер', 4, 20)
    """
)
# ------Создание и заполнение таблицы Заказчики
db.goFetch(
    """
CREATE TABLE Заказчики
( Наименование_фирмы nvarchar(20) primary key,
Адрес nvarchar(50),
Расчетный_счет nvarchar(20)
) ;
insert into Заказчики (Наименование_фирмы, Адрес, Расчетный_счет)
values ('Луч', 'Минск, ул. Короля, 3', '123456'),
('Белвест', 'Витебск, ул. Герцена, 20', '3423456'),
('Радуга', 'Минск, ул. Скорины, 19', '983456'),
('Zte', 'Смолевичи, ул. Кирова, 32', '883456')
    """
)
# ------Создание и заполнение таблицы Заказы
db.goFetch(
    """
CREATE TABLE Заказы
( Номер_заказа int primary key,
Наименование_товара nvarchar(20) foreign key
references Товары(Наименование),
Цена_продажи real,
Количество int,
Дата_поставки date,
Заказчик nvarchar(20) foreign key
references Заказчики(Наименование_фирмы)
)
insert into Заказы (Номер_заказа,Наименование_товара,Цена_продажи,
Количество,Дата_поставки,Заказчик)
values (1,'Шкаф книжный', 150, 21, '08.10.2014','Луч'),
(2,'Стол', 78, 10, '01.12.2014','Луч'),
(3,'Стул', 9, 13, '04.07.2014','Белвест'),
(4,'Диван', 400, 3, '01.09.2014','Zte'),
(5,'Шкаф', 450, 10, '08.10.2014','Луч'),
(6,'Степлер', 5, 6, '01.09.2014','Радуга'),
(7,'Диван', 400, 3, '01.09.2014','Zte'),
(8,'Бумага', 4, 11, '08.10.2014','Луч'),
(9,'Скрепки', 6, 3, '01.09.2014','Радуга')
    """
)

db.fetch(
    1,
    """
    SELECT min(Цена_продажи) [Минимальная цена],
        max(Цена_продажи) [Максимальная цена],
        count(*) [Количество товаров],
        avg(Цена_продажи) [Заказы на общую сумму]
    FROM Заказы
    """,
)
db.fetch(
    2,
    """
    SELECT Наименование_товара,
        max(Цена_продажи) [Максимальная цена],
        count(*) [Количество заказанных товаров]
    From Заказы Inner Join Товары
    On Заказы.Наименование_товара = Товары.Наименование
    And Товары.Количество >5 Group by Наименование_товара
    """,
)
db.fetch(
    3,
    """
    SELECT *
    FROM(select Case when Цена_продажи between 1 and 50 then 'цена<50'
        when Цена_продажи between 50 and 100 then 'цена от 50 до 100'
        else 'цена больше 100'
        end [Пределы цен], COUNT(*)[Количество]
    FROM Заказы Group by Case
        when Цена_продажи between 1 and 50 then 'цена<50'
        when Цена_продажи between 50 and 100 then 'цена от 50 до 100'
        else 'цена больше 100'
        end) as T
            ORDER BY Case[Пределы цен]
                when 'цена<50' then 3
                when 'цена от 50 до 100' then 2
                when 'цена больше 100' then 1
                else 0
                end
    """,
)
db.fetch(
    4,
    """
    SELECT g.Наименование_товара,
        s.Наименование_фирмы,
        f.Цена,
        round(avg(cast(g.Цена_продажи as float(4))), 2)
    From Товары f inner join Заказы g
        on f.Наименование = g.Наименование_товара
        inner join Заказчики s
        on g.Заказчик = s.Наименование_фирмы
    WHERE f.Цена > 50
    GROUP BY g.Наименование_товара,
        s.Наименование_фирмы,
        f.Цена
    """,
)
db.fetch(
    5,
    """
    SELECT Наименование_товара, Цена_продажи, SUM(Количество)
    Количество
    From Заказы
    WHERE Наименование_товара IN('стол','стул')
    GROUP BY Наименование_товара, Цена_продажи;
    """,
)
db.fetch(
    5,
    """
    SELECT Наименование_товара, Цена_продажи, SUM(Количество)
    Количество
    From Заказы
    WHERE Наименование_товара IN('стол','стул')
    GROUP BY ROLLUP (Наименование_товара, Цена_продажи);
    """,
)
db.fetch(
    6,
    """
    SELECT Наименование_товара, Цена_продажи, SUM(Количество)
    Количество
    From Заказы
    WHERE Наименование_товара IN('стол','стул')
    GROUP BY CUBE (Наименование_товара, Цена_продажи);
    """,
)
db.fetch(
    7,
    """
    SELECT Наименование_товара, SUM(Количество)Количество
    From Заказы WHERE Заказчик='Луч'
    GROUP BY Наименование_товара
    UNION
    SELECT Наименование_товара, SUM(Количество)Количество
    From Заказы WHERE Заказчик='Белвест'
    GROUP BY Наименование_товара
    """,
)
db.fetch(
    7,
    """
    SELECT Наименование_товара, SUM(Количество)Количество
    From Заказы WHERE Заказчик='Луч'
    GROUP BY Наименование_товара
    UNION ALL
    SELECT Наименование_товара, SUM(Количество)Количество
    From Заказы WHERE Заказчик='Белвест'
    GROUP BY Наименование_товара
    """,
)
db.fetch(
    8,
    """
    SELECT Наименование_товара, SUM(Количество)Количество
    From Заказы WHERE Заказчик='Луч'
    GROUP BY Наименование_товара
    INTERSECT
    SELECT Наименование_товара, SUM(Количество)Количество
    From Заказы WHERE Заказчик='Белвест'
    GROUP BY Наименование_товара
    """,
)
db.fetch(
    9,
    """
    SELECT Наименование_товара, SUM(Количество)Количество
    From Заказы WHERE Заказчик='Луч'
    GROUP BY Наименование_товара
    EXCEPT
    SELECT Наименование_товара, SUM(Количество)Количество
    From Заказы WHERE Заказчик='Белвест'
    GROUP BY Наименование_товара
    """,
)
db.fetch(
    10,
    """
    SELECT p1.Наименование_товара, p1.Цена_продажи,
        (select COUNT(*) from Заказы p2
        WHERE p2.Наименование_товара = p1.Наименование_товара
        and p2.Цена_продажи = p1.Цена_продажи)[Количество]
    From Заказы p1
    GROUP BY p1.Наименование_товара, p1.Цена_продажи
    HAVING Цена_продажи <50 or Цена_продажи >100
    """,
)

del db
